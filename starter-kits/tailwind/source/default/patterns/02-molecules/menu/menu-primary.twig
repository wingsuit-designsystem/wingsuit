{% set menu_level = 0 %}

{% import _self as menus %}

{% macro dropdown_menu(items, menu_level) %}
  {% import _self as menus %}
  {% set container_classes = ([
    'submenu lg:border bg-white',
    menu_level == 1 ? 'lg:absolute left-[-165px] x-clock' : 'lg:absolute lg:top-0',
  ] | sort | join(' ') | trim ) %}

  {% set link_classes = ([
    menu_level == 1 ? 'w-full lg:w-[320px]' : 'w-full lg:w-[240px]',
    menu_level >= 1 ? 'lg:hover:bg-teal-50 block cursor-pointer lg:flex pl-8 pr-4 lg:px-4 py-3 border-b lg:border-0',
  ] | sort | join(' ') | trim ) %}

  <div class="{{ container_classes }}"
       :class="{'block': submenuIsOpen, 'hidden lg:group-hover:block': !submenuIsOpen, {% if menu_level > 1 %} 'lg:left-full': submenuDirection == 'right', 'lg:right-full': submenuDirection == 'left' {% endif %} }"
       data-menu="submenu">
    <div {{ menu_level == 2 ? 'class="lg:flex"' }}>
      {% set row_numbers = items|length/2 %}
      {% for row in items|batch(menu_level == 2 ? row_numbers : 100) %}
        <ul>
          {% for item in row %}
            <li class="relative"
              {% if item.below %} x-data="Drupal.behaviors.wingsuitMenu()"
              @mouseenter="processed = true;submenuDirection=getSubmenuDirection($el);"
              @mouseleave="processed = false"
              {% endif %}
              :class="{ 'menu-processed' : processed == true }" data-menu-target="submenu"
              data-menu-level="{{ menu_level }}">
              <div class="{{ link_classes }}">
                <a href="{{ item.url }}" class="flex-1 font-display">
                  {{ item.title }}
                </a>
                {% if item.below %}
                  <div
                    class="w-[18px] h-5 {{
                      menu_level == 1
                        ? 'float-right center-origin transition duration-100 ease-in lg:-rotate-90'
                        : 'float-right lg:hidden center-origin transition duration-100 ease-in'
                    }} cursor-pointer"
                    {% if item.below %} @click="submenuIsOpen = !submenuIsOpen;" {% endif %}
                    :class="{'rotate-180': submenuIsOpen, 'rotate-0': !submenuIsOpen}">
                    {{ pattern('icon', {icon: 'chevron-down', scale: '1' }, 'spritemap' ) }}
                    {{ menus.dropdown_menu(menu_level) }}
                  </div>
                {% endif %}
              </div>
              {% if item.below %}
                {{ menus.dropdown_menu(item.below, menu_level + 1) }}
              {% endif %}
            </li>
          {% endfor %}
        </ul>
      {% endfor %}
    </div>
  </div>
{% endmacro %}

{% set list_classes = ([
  'lg:flex lg:justify-end lg:space-x-6 lg:items-center'
] | sort | join(' ') | trim ) %}

<ul class="{{ list_classes }}">
  {% for item in items %}
    {% set link_classes = ([
      'font-bold font-display text-black lg:text-white lg:group-hover:text-teal-200 w-full block cursor-pointer lg:inline-block',
    ] | sort | join(' ') | trim ) %}
    <li class="relative group" {% if item.below %}
      x-data="Drupal.behaviors.wingsuitMenu()"
      data-menu-target="submenu" {% endif %} data-menu-level="{{ menu_level }}">
      <div class="flex items-center gap-2 border-b lg:border-0 px-5 lg:px-0 py-4 lg:py-0">
        <a href="{{ item.url }}" class="{{ link_classes }}">
          {{ item.title }}
        </a>
        {% if item.below is not empty %}
          <div class="w-[18px] h-5 {{
              menu_level == 1
                ? 'float-right center-origin transition duration-100 ease-in lg:-rotate-90'
                : 'float-right center-origin transition duration-100 ease-in lg:group-hover:rotate-180 text-black lg:text-white lg:group-hover:text-teal-200'
            }} cursor-pointer"
            {% if item.below %} @click="submenuIsOpen = !submenuIsOpen;" {% endif %}
            :class="{'rotate-180': submenuIsOpen, 'rotate-0': !submenuIsOpen}">
            {{ pattern('icon', {icon: 'chevron-down' }, 'spritemap' ) }}
          </div>
        {% endif %}
      </div>
      {% if item.below %}
        {{ menus.dropdown_menu(item.below, menu_level + 1) }}
      {% endif %}
    </li>
  {% endfor %}
</ul>

